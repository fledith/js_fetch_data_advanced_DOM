{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","ENDPOINTS","phones","phoneById","id","createDOM","className","title","ids","position","document","querySelector","insertAdjacentHTML","map","name","join","request","url","fetch","then","value","json","catch","error","Promise","reject","getPhones","getAllSuccessfulDetails","all","data","getFirstSuccessfulDetails","race","getThreeFastestDetails","firstReceived","i","push","console","log","phone"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DACXC,EAAY,CAChBC,OAAQ,eACRC,UAAW,SAACC,GAAkBA,MAAAA,WAAAA,OAAAA,EAAnB,WAGPC,EAAY,SAACC,EAAWC,EAAOC,EAAKC,GACxCC,SAASC,cAAc,QAAQC,mBAAmBH,EAClCH,qBAAAA,OAAAA,EACNC,kBAAAA,OAAAA,EAEFC,+BAAAA,OAAAA,EAAIK,IAAI,SAAAT,GAAaA,MAAAA,OAAAA,OAAAA,EAAGU,KAAd,WAA2BC,KAAK,IAJlD,mCAUIC,EAAU,SAACC,GACRC,OAAAA,MAASlB,GAAAA,OAAAA,GAAWiB,OAAAA,IACxBE,KAAK,SAAAC,GAASA,OAAAA,EAAMC,SACpBC,MAAM,SAAAC,GAASC,OAAAA,QAAQC,OAAOF,MAG7BG,EAAY,WAAMV,OAAAA,EAAQf,EAAUC,SAEpCW,EAAM,SAACL,GAAQA,OAAAA,EAAIK,IAAI,SAAAT,GAAMY,OAAAA,EAAQf,EAAUE,UAAUC,OAEzDuB,EAA0B,SAACnB,GACxBgB,OAAAA,QAAQI,IAAIf,EAAIL,IACpBW,KAAK,SAAAU,GACJxB,EAAU,iBAAkB,iBAAkBwB,EAAM,gBAIpDC,EAA4B,SAACtB,GAC1BgB,OAAAA,QAAQO,KAAKlB,EAAIL,IACrBW,KAAK,SAAAU,GACJxB,EAAU,iBAAkB,iBAAkB,CAACwB,GAAO,iBAItDG,EAAyB,SAACxB,GAGzB,IAFCyB,IAAAA,EAAgB,GAEbC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAcE,KAAKX,QAAQO,KAAMlB,EAAIL,KAGvCgB,QAAQI,IAAIK,GAAed,KAAK,SAAAU,GAAQO,OAAAA,QAAQC,IAAIR,MAGtDH,IAAYP,KAAK,SAAAU,GACTrB,IAAAA,EAAMqB,EAAKhB,IAAI,SAAAyB,GAASA,OAAAA,EAAMlC,KAEpCuB,EAAwBnB,GACxBsB,EAA0BtB,GAC1BwB,EAAuBxB","file":"main.49ec9b00.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst ENDPOINTS = {\n  phones: '/phones.json',\n  phoneById: (id) => `/phones/${id}.json`,\n};\n\nconst createDOM = (className, title, ids, position) => {\n  document.querySelector('body').insertAdjacentHTML(position, `\n    <div class=\"${className}\">\n      <h2>${title}</h2>\n      <ul>\n        ${ids.map(id => `<li>${id.name}</li>`).join('')}\n      </ul>\n    </div>\n  `);\n};\n\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(value => value.json())\n    .catch(error => Promise.reject(error));\n};\n\nconst getPhones = () => request(ENDPOINTS.phones);\n\nconst map = (ids) => ids.map(id => request(ENDPOINTS.phoneById(id)));\n\nconst getAllSuccessfulDetails = (ids) => {\n  return Promise.all(map(ids))\n    .then(data => {\n      createDOM('all-successful', 'All Successful', data, 'beforeend');\n    });\n};\n\nconst getFirstSuccessfulDetails = (ids) => {\n  return Promise.race(map(ids))\n    .then(data => {\n      createDOM('first-received', 'First Received', [data], 'afterbegin');\n    });\n};\n\nconst getThreeFastestDetails = (ids) => {\n  const firstReceived = [];\n\n  for (let i = 0; i < 3; i++) {\n    firstReceived.push(Promise.race((map(ids))));\n  }\n\n  Promise.all(firstReceived).then(data => console.log(data)) // eslint-disable-line\n};\n\ngetPhones().then(data => {\n  const ids = data.map(phone => phone.id);\n\n  getAllSuccessfulDetails(ids);\n  getFirstSuccessfulDetails(ids);\n  getThreeFastestDetails(ids);\n});\n"]}